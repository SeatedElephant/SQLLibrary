CREATE PROCEDURE [dbo].[usp_Stored_Procedure_1] 

AS

-- SET XACT_ABORT to ON so that if a T-SQL statement raises an error the whole transaction is rolled back
SET XACT_ABORT ON

-- SET NOCOUNT ON added to prevent extra result sets from
-- interfering with SELECT statements.
SET NOCOUNT ON;

--Variable for error handling return value 
DECLARE @ErrorSave int

BEGIN TRY
    --Raiseerror just for testing TEST
    --RAISERROR ('Error raised in TRY block.', -- Message text.
    --           16, -- Severity.
    --           1 -- State.
    --           );

	-- Truncate table
	TRUNCATE TABLE Table1;  
	
    -- Insert statements for trigger here
	INSERT INTO Table1  
		SELECT CASE 
			WHEN CAST(RIGHT([Month],2) AS INT) BETWEEN 4 AND 12 THEN LEFT([Month], 4) + '/' + CAST(DATEADD(year, 1, CAST(LEFT([Month], 4) AS DATE)) AS CHAR(4))
			ELSE CAST(DATEADD(year, -1, CAST(LEFT([Month], 4) AS DATE)) AS CHAR(4)) + '/' + LEFT([Month], 4)  
		   END AS FinancialYear
		   ,CAST([Month] + '01' AS DATE) AS TheMonth
		   ,HospitalName
		   ,SpecialtyTreat + ' - ' + SpecialtyDesc AS Specialy
		   ,SUM(TotalRecs) AS TotalRecs
		   ,SUM(TotalValidPrimaryDiag) AS TotalValidPrimaryDiag 
		FROM  BaseTable
		GROUP BY CASE 
			WHEN CAST(RIGHT([Month],2) AS INT) BETWEEN 4 AND 12 THEN LEFT([Month], 4) + '/' + CAST(DATEADD(year, 1, CAST(LEFT([Month], 4) AS DATE)) AS CHAR(4))
			ELSE CAST(DATEADD(year, -1, CAST(LEFT([Month], 4) AS DATE)) AS CHAR(4)) + '/' + LEFT([Month], 4)  
		   END
		   ,CAST([Month] + '01' AS DATE)
		   ,HospitalName
		   ,SpecialtyTreat + ' - ' + SpecialtyDesc;
		   
	-- Copy the data to the reporting server
	DELETE FROM [Server2].[Database2].[dbo].[Table2]
	
	-- Insert the reocrds from the dev server table to the reporting server table
	INSERT INTO [Server2].[Database2].[dbo].[Table2]
	SELECT [FinancialYear]
      ,[TheMonth]
      ,[HospitalName]
      ,[Specialty]
      ,[TotalRecs]
      ,[TotalValidPrimaryDiag]
    FROM Table1;  

	--Return the value 0 if no error occured in the TRY block
	RETURN @ErrorSave
END TRY
BEGIN CATCH 
	--Assign the error value to the variable and then return the variable (which is not 0 and
	--indicated an error
	SET @ErrorSave = @@ERROR 
	RETURN @ErrorSave
END CATCH
